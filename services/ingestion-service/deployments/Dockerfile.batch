# Build stage
FROM golang:1.21-alpine AS builder

# Install dependencies
RUN apk add --no-cache git

# Set working directory
WORKDIR /app

# Copy go mod files
COPY go.mod go.sum ./

# Download dependencies
RUN go mod download

# Copy source code
COPY . .

# Build argument for specific batch command
ARG BATCH_CMD=/app/bin/batch-trending

# Build the specific batch command
RUN if [ "$BATCH_CMD" = "/app/bin/batch-trending" ]; then \
      go build -o /app/bin/batch-trending ./cmd/batch/trending; \
    elif [ "$BATCH_CMD" = "/app/bin/batch-schedule-snapshots" ]; then \
      go build -o /app/bin/batch-schedule-snapshots ./cmd/batch/schedule-snapshots; \
    elif [ "$BATCH_CMD" = "/app/bin/batch-websub-renewal" ]; then \
      go build -o /app/bin/batch-websub-renewal ./cmd/batch/websub-renewal; \
    elif [ "$BATCH_CMD" = "/app/bin/batch-rankings" ]; then \
      go build -o /app/bin/batch-rankings ./cmd/batch/rankings; \
    fi

# Runtime stage
FROM alpine:latest

# Install ca-certificates for HTTPS
RUN apk --no-cache add ca-certificates

# Create non-root user
RUN addgroup -g 1000 -S appuser && \
    adduser -u 1000 -S appuser -G appuser

# Set working directory
WORKDIR /app

# Copy binary from builder
ARG BATCH_CMD=/app/bin/batch-trending
COPY --from=builder $BATCH_CMD $BATCH_CMD

# Set ownership
RUN chown -R appuser:appuser /app

# Switch to non-root user
USER appuser

# Run the batch command
CMD ["$BATCH_CMD"]